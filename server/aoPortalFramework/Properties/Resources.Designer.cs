//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Contensive.Addons.PortalFramework.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Contensive.Addons.PortalFramework.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {{#hasMenu}}
        ///&lt;div class=&quot;d-flex&quot;&gt;
        ///    &lt;div class=&quot;dropdown d-inline pr-1&quot;&gt;
        ///        &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;16&quot; height=&quot;16&quot; fill=&quot;currentColor&quot; class=&quot;bi bi-three-dots-vertical dropdown-toggle&quot; viewBox=&quot;0 0 16 16&quot; id=&quot;dropdownMenuButton{{menuId}}&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&gt;
        ///            &lt;path d=&quot;M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z&quot; /&gt;
        ///        &lt;/svg&gt;
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ellipseMenu {
            get {
                return ResourceManager.GetString("ellipseMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to //
        ///// adminFramework assembly referenced js
        /////
        ///if (typeof google !== &apos;object&apos;) {
        ///    document.write(&apos;&lt;scr&apos; + &apos;ipt type=&quot;text/javascript&quot; src=&quot;https://www.google.com/jsapi&quot;&gt;&lt;/scr&apos; + &apos;ipt&gt;&apos;);
        ///}
        ///function cjFrameSubmitForm(remoteMethodName, frameHtmlId, formHtmlId) {
        ///    jQuery(&apos;#&apos; + frameHtmlId).block();
        ///    cj.ajax.addon(
        ///        remoteMethodName
        ///        , &apos;frameName=&apos; + frameHtmlId
        ///        , formHtmlId
        ///        , frameHtmlId
        ///    );
        ///}
        ///function cjFrameUpdate(remoteMethodName, frameHtmlId, qs) {
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string javascript {
            get {
                return ResourceManager.GetString("javascript", resourceCulture);
            }
        }
        internal static string styles {
            get {
                return ResourceManager.GetString("styles", resourceCulture);
            }
        }
    }
}
